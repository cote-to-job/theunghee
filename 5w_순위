def solution(n, results):
    answer = 0

    # 그래프(1부터 시작)
    grid = [[0 for _ in range(n+1)] for _ in range(n+1)]
    
    # 승부 결과 있는 좌표에 1
    for a, b in results:
        grid[a][b] = 1
    
    # 플로이드-워셜 알고리즘
    for k in range(1, n+1):
        for i in range(1, n+1):
            for j in range(1, n+1):
                # i > k > j 경우, i > j 그래프에 1
                if grid[i][k] == 1 and grid[k][j] == 1:
                    grid[i][j] = 1 
    
    # 몇 명과 승부 났는지 체크
    aggregate = [0 for _ in range(n+1)]
    for i in range(1, n+1):
        for j in range(1, n+1):
            # 그래프에 1이면, 승부 났으니 각 노드마다 집계
            if grid[i][j] == 1:
                aggregate[i] += 1
                aggregate[j] += 1
    
    # 모두와 승부가 난 노드 개수 세기
    for i in range(1, n+1):
        if aggregate[i] == n-1:
            answer += 1

    return answer
